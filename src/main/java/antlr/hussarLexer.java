// Generated from java-escape by ANTLR 4.11.1
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class hussarLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, WHITESPACE=2, PASS=3, PLUS=4, MINUS=5, INCREMENT=6, DECREMENT=7, 
		MULTIPLICATION=8, DIVIDE=9, POWER=10, EQ=11, LESSER=12, LESSEREQ=13, GREATER=14, 
		GREATEREQ=15, L_BRACKET=16, R_BRACKET=17, L_BUCKLE=18, R_BUCKLE=19, IF_SYM=20, 
		FOR_SYM=21, WHILE_SYM=22, PRINT_SYM=23, ID_NAME=24, ID_NUMBER=25, ID_CHAR=26, 
		ID_STRING=27, DOT_SYM=28, COMA_SYM=29, COLON_SYM=30, SEMICOLON_SYM=31, 
		APOSTROPHE_SYM=32, L_ARROW_SYM=33, R_ARROW_SYM=34, CHAR=35, STRING=36, 
		INT=37;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "WHITESPACE", "PASS", "PLUS", "MINUS", "INCREMENT", "DECREMENT", 
			"MULTIPLICATION", "DIVIDE", "POWER", "EQ", "LESSER", "LESSEREQ", "GREATER", 
			"GREATEREQ", "L_BRACKET", "R_BRACKET", "L_BUCKLE", "R_BUCKLE", "IF_SYM", 
			"FOR_SYM", "WHILE_SYM", "PRINT_SYM", "ID_NAME", "ID_NUMBER", "ID_CHAR", 
			"ID_STRING", "DOT_SYM", "COMA_SYM", "COLON_SYM", "SEMICOLON_SYM", "APOSTROPHE_SYM", 
			"L_ARROW_SYM", "R_ARROW_SYM", "CHAR", "STRING", "INT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'zacznij'", null, "'nic'", "'+'", "'-'", "'++'", "'--'", "'*'", 
			"'/'", "'^'", "'='", "'<'", "'<='", "'>'", "'>='", "'('", "')'", "'{'", 
			"'}'", null, "'dla'", "'dopoki'", "'pokaz'", null, "'liczba '", null, 
			null, "'.'", "','", "':'", "';'", "'''", "'<-'", "'->'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, "WHITESPACE", "PASS", "PLUS", "MINUS", "INCREMENT", "DECREMENT", 
			"MULTIPLICATION", "DIVIDE", "POWER", "EQ", "LESSER", "LESSEREQ", "GREATER", 
			"GREATEREQ", "L_BRACKET", "R_BRACKET", "L_BUCKLE", "R_BUCKLE", "IF_SYM", 
			"FOR_SYM", "WHILE_SYM", "PRINT_SYM", "ID_NAME", "ID_NUMBER", "ID_CHAR", 
			"ID_STRING", "DOT_SYM", "COMA_SYM", "COLON_SYM", "SEMICOLON_SYM", "APOSTROPHE_SYM", 
			"L_ARROW_SYM", "R_ARROW_SYM", "CHAR", "STRING", "INT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public hussarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "hussar.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 36:
			INT_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void INT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:
//			'-'
			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u0000%\u00ea\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001"+
		"\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0003\u0013\u0089\b\u0013\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0005\u0017\u009e"+
		"\b\u0017\n\u0017\f\u0017\u00a1\t\u0017\u0001\u0018\u0001\u0018\u0001\u0018"+
		"\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0019"+
		"\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019"+
		"\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0003\u0019"+
		"\u00b7\b\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a"+
		"\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a"+
		"\u0001\u001a\u0003\u001a\u00c5\b\u001a\u0001\u001b\u0001\u001b\u0001\u001c"+
		"\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001f"+
		"\u0001\u001f\u0001 \u0001 \u0001 \u0001!\u0001!\u0001!\u0001\"\u0001\""+
		"\u0001\"\u0001\"\u0001#\u0001#\u0004#\u00dd\b#\u000b#\f#\u00de\u0001#"+
		"\u0001#\u0001$\u0001$\u0001$\u0005$\u00e6\b$\n$\f$\u00e9\t$\u0000\u0000"+
		"%\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006"+
		"\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e"+
		"\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017"+
		"/\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$I%"+
		"\u0001\u0000\u0006\u0003\u0000\t\n\r\r  \u0002\u0000AZaz\u0004\u00000"+
		"9AZ__az\u0006\u0000\t\n\r\r  09AZaz\u0001\u000019\u0001\u000009\u00ef"+
		"\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000"+
		"\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000"+
		"\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000"+
		"\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000"+
		"\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000"+
		"\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000="+
		"\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000"+
		"\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000"+
		"\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0001K"+
		"\u0001\u0000\u0000\u0000\u0003S\u0001\u0000\u0000\u0000\u0005W\u0001\u0000"+
		"\u0000\u0000\u0007[\u0001\u0000\u0000\u0000\t]\u0001\u0000\u0000\u0000"+
		"\u000b_\u0001\u0000\u0000\u0000\rb\u0001\u0000\u0000\u0000\u000fe\u0001"+
		"\u0000\u0000\u0000\u0011g\u0001\u0000\u0000\u0000\u0013i\u0001\u0000\u0000"+
		"\u0000\u0015k\u0001\u0000\u0000\u0000\u0017m\u0001\u0000\u0000\u0000\u0019"+
		"o\u0001\u0000\u0000\u0000\u001br\u0001\u0000\u0000\u0000\u001dt\u0001"+
		"\u0000\u0000\u0000\u001fw\u0001\u0000\u0000\u0000!y\u0001\u0000\u0000"+
		"\u0000#{\u0001\u0000\u0000\u0000%}\u0001\u0000\u0000\u0000\'\u0088\u0001"+
		"\u0000\u0000\u0000)\u008a\u0001\u0000\u0000\u0000+\u008e\u0001\u0000\u0000"+
		"\u0000-\u0095\u0001\u0000\u0000\u0000/\u009b\u0001\u0000\u0000\u00001"+
		"\u00a2\u0001\u0000\u0000\u00003\u00b6\u0001\u0000\u0000\u00005\u00c4\u0001"+
		"\u0000\u0000\u00007\u00c6\u0001\u0000\u0000\u00009\u00c8\u0001\u0000\u0000"+
		"\u0000;\u00ca\u0001\u0000\u0000\u0000=\u00cc\u0001\u0000\u0000\u0000?"+
		"\u00ce\u0001\u0000\u0000\u0000A\u00d0\u0001\u0000\u0000\u0000C\u00d3\u0001"+
		"\u0000\u0000\u0000E\u00d6\u0001\u0000\u0000\u0000G\u00da\u0001\u0000\u0000"+
		"\u0000I\u00e2\u0001\u0000\u0000\u0000KL\u0005z\u0000\u0000LM\u0005a\u0000"+
		"\u0000MN\u0005c\u0000\u0000NO\u0005z\u0000\u0000OP\u0005n\u0000\u0000"+
		"PQ\u0005i\u0000\u0000QR\u0005j\u0000\u0000R\u0002\u0001\u0000\u0000\u0000"+
		"ST\u0007\u0000\u0000\u0000TU\u0001\u0000\u0000\u0000UV\u0006\u0001\u0000"+
		"\u0000V\u0004\u0001\u0000\u0000\u0000WX\u0005n\u0000\u0000XY\u0005i\u0000"+
		"\u0000YZ\u0005c\u0000\u0000Z\u0006\u0001\u0000\u0000\u0000[\\\u0005+\u0000"+
		"\u0000\\\b\u0001\u0000\u0000\u0000]^\u0005-\u0000\u0000^\n\u0001\u0000"+
		"\u0000\u0000_`\u0005+\u0000\u0000`a\u0005+\u0000\u0000a\f\u0001\u0000"+
		"\u0000\u0000bc\u0005-\u0000\u0000cd\u0005-\u0000\u0000d\u000e\u0001\u0000"+
		"\u0000\u0000ef\u0005*\u0000\u0000f\u0010\u0001\u0000\u0000\u0000gh\u0005"+
		"/\u0000\u0000h\u0012\u0001\u0000\u0000\u0000ij\u0005^\u0000\u0000j\u0014"+
		"\u0001\u0000\u0000\u0000kl\u0005=\u0000\u0000l\u0016\u0001\u0000\u0000"+
		"\u0000mn\u0005<\u0000\u0000n\u0018\u0001\u0000\u0000\u0000op\u0005<\u0000"+
		"\u0000pq\u0005=\u0000\u0000q\u001a\u0001\u0000\u0000\u0000rs\u0005>\u0000"+
		"\u0000s\u001c\u0001\u0000\u0000\u0000tu\u0005>\u0000\u0000uv\u0005=\u0000"+
		"\u0000v\u001e\u0001\u0000\u0000\u0000wx\u0005(\u0000\u0000x \u0001\u0000"+
		"\u0000\u0000yz\u0005)\u0000\u0000z\"\u0001\u0000\u0000\u0000{|\u0005{"+
		"\u0000\u0000|$\u0001\u0000\u0000\u0000}~\u0005}\u0000\u0000~&\u0001\u0000"+
		"\u0000\u0000\u007f\u0080\u0005c\u0000\u0000\u0080\u0081\u0005z\u0000\u0000"+
		"\u0081\u0089\u0005y\u0000\u0000\u0082\u0083\u0005j\u0000\u0000\u0083\u0084"+
		"\u0005e\u0000\u0000\u0084\u0085\u0005z\u0000\u0000\u0085\u0086\u0005e"+
		"\u0000\u0000\u0086\u0087\u0005l\u0000\u0000\u0087\u0089\u0005i\u0000\u0000"+
		"\u0088\u007f\u0001\u0000\u0000\u0000\u0088\u0082\u0001\u0000\u0000\u0000"+
		"\u0089(\u0001\u0000\u0000\u0000\u008a\u008b\u0005d\u0000\u0000\u008b\u008c"+
		"\u0005l\u0000\u0000\u008c\u008d\u0005a\u0000\u0000\u008d*\u0001\u0000"+
		"\u0000\u0000\u008e\u008f\u0005d\u0000\u0000\u008f\u0090\u0005o\u0000\u0000"+
		"\u0090\u0091\u0005p\u0000\u0000\u0091\u0092\u0005o\u0000\u0000\u0092\u0093"+
		"\u0005k\u0000\u0000\u0093\u0094\u0005i\u0000\u0000\u0094,\u0001\u0000"+
		"\u0000\u0000\u0095\u0096\u0005p\u0000\u0000\u0096\u0097\u0005o\u0000\u0000"+
		"\u0097\u0098\u0005k\u0000\u0000\u0098\u0099\u0005a\u0000\u0000\u0099\u009a"+
		"\u0005z\u0000\u0000\u009a.\u0001\u0000\u0000\u0000\u009b\u009f\u0007\u0001"+
		"\u0000\u0000\u009c\u009e\u0007\u0002\u0000\u0000\u009d\u009c\u0001\u0000"+
		"\u0000\u0000\u009e\u00a1\u0001\u0000\u0000\u0000\u009f\u009d\u0001\u0000"+
		"\u0000\u0000\u009f\u00a0\u0001\u0000\u0000\u0000\u00a00\u0001\u0000\u0000"+
		"\u0000\u00a1\u009f\u0001\u0000\u0000\u0000\u00a2\u00a3\u0005l\u0000\u0000"+
		"\u00a3\u00a4\u0005i\u0000\u0000\u00a4\u00a5\u0005c\u0000\u0000\u00a5\u00a6"+
		"\u0005z\u0000\u0000\u00a6\u00a7\u0005b\u0000\u0000\u00a7\u00a8\u0005a"+
		"\u0000\u0000\u00a8\u00a9\u0005 \u0000\u0000\u00a92\u0001\u0000\u0000\u0000"+
		"\u00aa\u00ab\u0005l\u0000\u0000\u00ab\u00ac\u0005i\u0000\u0000\u00ac\u00ad"+
		"\u0005t\u0000\u0000\u00ad\u00ae\u0005e\u0000\u0000\u00ae\u00af\u0005r"+
		"\u0000\u0000\u00af\u00b0\u0005a\u0000\u0000\u00b0\u00b7\u0005 \u0000\u0000"+
		"\u00b1\u00b2\u0005z\u0000\u0000\u00b2\u00b3\u0005n\u0000\u0000\u00b3\u00b4"+
		"\u0005a\u0000\u0000\u00b4\u00b5\u0005k\u0000\u0000\u00b5\u00b7\u0005 "+
		"\u0000\u0000\u00b6\u00aa\u0001\u0000\u0000\u0000\u00b6\u00b1\u0001\u0000"+
		"\u0000\u0000\u00b74\u0001\u0000\u0000\u0000\u00b8\u00b9\u0005s\u0000\u0000"+
		"\u00b9\u00ba\u0005l\u0000\u0000\u00ba\u00bb\u0005o\u0000\u0000\u00bb\u00bc"+
		"\u0005w\u0000\u0000\u00bc\u00bd\u0005o\u0000\u0000\u00bd\u00c5\u0005 "+
		"\u0000\u0000\u00be\u00bf\u0005w\u0000\u0000\u00bf\u00c0\u0005y\u0000\u0000"+
		"\u00c0\u00c1\u0005r\u0000\u0000\u00c1\u00c2\u0005a\u0000\u0000\u00c2\u00c3"+
		"\u0005z\u0000\u0000\u00c3\u00c5\u0005 \u0000\u0000\u00c4\u00b8\u0001\u0000"+
		"\u0000\u0000\u00c4\u00be\u0001\u0000\u0000\u0000\u00c56\u0001\u0000\u0000"+
		"\u0000\u00c6\u00c7\u0005.\u0000\u0000\u00c78\u0001\u0000\u0000\u0000\u00c8"+
		"\u00c9\u0005,\u0000\u0000\u00c9:\u0001\u0000\u0000\u0000\u00ca\u00cb\u0005"+
		":\u0000\u0000\u00cb<\u0001\u0000\u0000\u0000\u00cc\u00cd\u0005;\u0000"+
		"\u0000\u00cd>\u0001\u0000\u0000\u0000\u00ce\u00cf\u0005\'\u0000\u0000"+
		"\u00cf@\u0001\u0000\u0000\u0000\u00d0\u00d1\u0005<\u0000\u0000\u00d1\u00d2"+
		"\u0005-\u0000\u0000\u00d2B\u0001\u0000\u0000\u0000\u00d3\u00d4\u0005-"+
		"\u0000\u0000\u00d4\u00d5\u0005>\u0000\u0000\u00d5D\u0001\u0000\u0000\u0000"+
		"\u00d6\u00d7\u0005\"\u0000\u0000\u00d7\u00d8\u0007\u0001\u0000\u0000\u00d8"+
		"\u00d9\u0005\"\u0000\u0000\u00d9F\u0001\u0000\u0000\u0000\u00da\u00dc"+
		"\u0005\"\u0000\u0000\u00db\u00dd\u0007\u0003\u0000\u0000\u00dc\u00db\u0001"+
		"\u0000\u0000\u0000\u00dd\u00de\u0001\u0000\u0000\u0000\u00de\u00dc\u0001"+
		"\u0000\u0000\u0000\u00de\u00df\u0001\u0000\u0000\u0000\u00df\u00e0\u0001"+
		"\u0000\u0000\u0000\u00e0\u00e1\u0005\"\u0000\u0000\u00e1H\u0001\u0000"+
		"\u0000\u0000\u00e2\u00e3\u0006$\u0001\u0000\u00e3\u00e7\u0007\u0004\u0000"+
		"\u0000\u00e4\u00e6\u0007\u0005\u0000\u0000\u00e5\u00e4\u0001\u0000\u0000"+
		"\u0000\u00e6\u00e9\u0001\u0000\u0000\u0000\u00e7\u00e5\u0001\u0000\u0000"+
		"\u0000\u00e7\u00e8\u0001\u0000\u0000\u0000\u00e8J\u0001\u0000\u0000\u0000"+
		"\u00e9\u00e7\u0001\u0000\u0000\u0000\b\u0000\u0088\u009d\u009f\u00b6\u00c4"+
		"\u00de\u00e7\u0002\u0006\u0000\u0000\u0001$\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}